#include <iostream>
#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/features2d/features2d.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include <vector>

using namespace std;
using namespace cv;
const int EDGE_THRESHOLD = 10;
vector<Mat> mvImagePyramid;
int main( int argc, char* argv[])
{
  static int bit_pattern_31_[4*4] =//提取特征点时计算BREAF的标准
{
    8,-3, 9,5/*mean (0), correlation (0)*/,
    4,2, 7,-12/*mean (1.12461e-05), correlation (0.0437584)*/,
    -11,9, -8,2/*mean (3.37382e-05), correlation (0.0617409)*/,
    7,-12, 12,-13};
 const Point* pattern0 = (const Point*)bit_pattern_31_;  
 for(int i=0;i<5;i++){
   cout<<pattern0[i]<<endl;   //pattern0[0]是(8,-3)
}


return 0;
   
}
